# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cdr',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('calldate', models.DateTimeField()),
                ('clid', models.CharField(max_length=80)),
                ('src', models.CharField(max_length=80)),
                ('dst', models.CharField(max_length=80)),
                ('dcontext', models.CharField(max_length=80)),
                ('channel', models.CharField(max_length=80)),
                ('dstchannel', models.CharField(max_length=80)),
                ('lastapp', models.CharField(max_length=80)),
                ('lastdata', models.CharField(max_length=80)),
                ('duration', models.IntegerField()),
                ('billsec', models.IntegerField()),
                ('disposition', models.CharField(max_length=45)),
                ('amaflags', models.IntegerField()),
                ('accountcode', models.CharField(max_length=20)),
                ('uniqueid', models.CharField(max_length=32)),
                ('userfield', models.CharField(max_length=255)),
                ('servidor', models.CharField(max_length=255, blank=True)),
                ('gravacao', models.CharField(max_length=255, blank=True)),
                ('tipo', models.CharField(max_length=3, blank=True)),
                ('perfil', models.CharField(max_length=20, blank=True)),
                ('did', models.CharField(max_length=30, blank=True)),
            ],
            options={
                'db_table': 'cdr',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Musiconhold',
            fields=[
                ('name', models.CharField(max_length=80, serialize=False, primary_key=True)),
                ('mode', models.CharField(max_length=80, blank=True)),
                ('directory', models.CharField(max_length=255, blank=True)),
                ('application', models.CharField(max_length=255, blank=True)),
                ('digit', models.CharField(max_length=1, blank=True)),
                ('sort', models.CharField(max_length=10, blank=True)),
                ('format', models.CharField(max_length=10, blank=True)),
                ('stamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'musiconhold',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='QueueLog',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('time', models.DateTimeField(null=True, blank=True)),
                ('callid', models.CharField(max_length=50, blank=True)),
                ('queuename', models.CharField(max_length=50, blank=True)),
                ('agent', models.CharField(max_length=50, blank=True)),
                ('event', models.CharField(max_length=20, blank=True)),
                ('data1', models.CharField(max_length=50, blank=True)),
                ('data2', models.CharField(max_length=50, blank=True)),
                ('data3', models.CharField(max_length=50, blank=True)),
                ('data4', models.CharField(max_length=50, blank=True)),
                ('data5', models.CharField(max_length=50, blank=True)),
            ],
            options={
                'db_table': 'queue_log',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='QueueMemberTable',
            fields=[
                ('uniqueid', models.IntegerField(serialize=False, primary_key=True)),
                ('membername', models.CharField(max_length=40, blank=True)),
                ('queue_name', models.CharField(max_length=128, blank=True)),
                ('interface', models.CharField(max_length=128, blank=True)),
                ('penalty', models.IntegerField(null=True, blank=True)),
                ('paused', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'db_table': 'queue_member_table',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='QueueTable',
            fields=[
                ('name', models.CharField(max_length=128, serialize=False, primary_key=True)),
                ('musiconhold', models.CharField(max_length=128, blank=True)),
                ('announce', models.CharField(max_length=128, blank=True)),
                ('context', models.CharField(max_length=128, blank=True)),
                ('timeout', models.IntegerField(null=True, blank=True)),
                ('monitor_join', models.IntegerField(null=True, blank=True)),
                ('monitor_format', models.CharField(max_length=128, blank=True)),
                ('queue_youarenext', models.CharField(max_length=128, blank=True)),
                ('queue_thereare', models.CharField(max_length=128, blank=True)),
                ('queue_callswaiting', models.CharField(max_length=128, blank=True)),
                ('queue_holdtime', models.CharField(max_length=128, blank=True)),
                ('queue_minutes', models.CharField(max_length=128, blank=True)),
                ('queue_seconds', models.CharField(max_length=128, blank=True)),
                ('queue_lessthan', models.CharField(max_length=128, blank=True)),
                ('queue_thankyou', models.CharField(max_length=128, blank=True)),
                ('queue_reporthold', models.CharField(max_length=128, blank=True)),
                ('announce_frequency', models.IntegerField(null=True, blank=True)),
                ('announce_round_seconds', models.IntegerField(null=True, blank=True)),
                ('announce_holdtime', models.CharField(max_length=128, blank=True)),
                ('retry', models.IntegerField(null=True, blank=True)),
                ('wrapuptime', models.IntegerField(null=True, blank=True)),
                ('maxlen', models.IntegerField(null=True, blank=True)),
                ('servicelevel', models.IntegerField(null=True, blank=True)),
                ('strategy', models.CharField(max_length=128, blank=True)),
                ('joinempty', models.CharField(max_length=128, blank=True)),
                ('leavewhenempty', models.CharField(max_length=128, blank=True)),
                ('eventmemberstatus', models.IntegerField(null=True, blank=True)),
                ('eventwhencalled', models.IntegerField(null=True, blank=True)),
                ('reportholdtime', models.IntegerField(null=True, blank=True)),
                ('memberdelay', models.IntegerField(null=True, blank=True)),
                ('weight', models.IntegerField(null=True, blank=True)),
                ('timeoutrestart', models.IntegerField(null=True, blank=True)),
                ('periodic_announce', models.CharField(max_length=50, blank=True)),
                ('periodic_announce_frequency', models.IntegerField(null=True, blank=True)),
                ('ringinuse', models.IntegerField(null=True, blank=True)),
                ('setinterfacevar', models.IntegerField(null=True, blank=True)),
                ('cliente_id', models.IntegerField()),
                ('descricao', models.CharField(max_length=30)),
                ('redirto', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'queue_table',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SipDevices',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=10)),
                ('ipaddr', models.CharField(max_length=15, blank=True)),
                ('port', models.IntegerField(null=True, blank=True)),
                ('regseconds', models.IntegerField(null=True, blank=True)),
                ('defaultuser', models.CharField(max_length=50, blank=True)),
                ('fullcontact', models.CharField(max_length=35, blank=True)),
                ('regserver', models.CharField(max_length=20, blank=True)),
                ('useragent', models.CharField(max_length=20, blank=True)),
                ('lastms', models.IntegerField(null=True, blank=True)),
                ('host', models.CharField(max_length=40, blank=True)),
                ('type', models.CharField(max_length=6, blank=True)),
                ('context', models.CharField(max_length=40, blank=True)),
                ('permit', models.CharField(max_length=40, blank=True)),
                ('deny', models.CharField(max_length=40, blank=True)),
                ('secret', models.CharField(max_length=40, blank=True)),
                ('md5secret', models.CharField(max_length=40, blank=True)),
                ('remotesecret', models.CharField(max_length=40, blank=True)),
                ('transport', models.CharField(max_length=7, blank=True)),
                ('dtmfmode', models.CharField(max_length=9, blank=True)),
                ('directmedia', models.CharField(max_length=6, blank=True)),
                ('nat', models.CharField(max_length=18, blank=True)),
                ('callgroup', models.CharField(max_length=40, blank=True)),
                ('pickupgroup', models.CharField(max_length=40, blank=True)),
                ('language', models.CharField(max_length=40, blank=True)),
                ('disallow', models.CharField(max_length=40, blank=True)),
                ('allow', models.CharField(max_length=40, blank=True)),
                ('insecure', models.CharField(max_length=40, blank=True)),
                ('trustrpid', models.CharField(max_length=3, blank=True)),
                ('progressinband', models.CharField(max_length=5, blank=True)),
                ('promiscredir', models.CharField(max_length=3, blank=True)),
                ('useclientcode', models.CharField(max_length=3, blank=True)),
                ('accountcode', models.CharField(max_length=40, blank=True)),
                ('setvar', models.CharField(max_length=255, blank=True)),
                ('callerid', models.CharField(max_length=40, blank=True)),
                ('amaflags', models.CharField(max_length=40, blank=True)),
                ('callcounter', models.CharField(max_length=3, blank=True)),
                ('busylevel', models.IntegerField(null=True, blank=True)),
                ('allowoverlap', models.CharField(max_length=3, blank=True)),
                ('allowsubscribe', models.CharField(max_length=3, blank=True)),
                ('videosupport', models.CharField(max_length=3, blank=True)),
                ('maxcallbitrate', models.IntegerField(null=True, blank=True)),
                ('rfc2833compensate', models.CharField(max_length=3, blank=True)),
                ('mailbox', models.CharField(max_length=40, blank=True)),
                ('session_timers', models.CharField(max_length=9, db_column='session-timers', blank=True)),
                ('session_expires', models.IntegerField(null=True, db_column='session-expires', blank=True)),
                ('session_minse', models.IntegerField(null=True, db_column='session-minse', blank=True)),
                ('session_refresher', models.CharField(max_length=3, db_column='session-refresher', blank=True)),
                ('t38pt_usertpsource', models.CharField(max_length=40, blank=True)),
                ('regexten', models.CharField(max_length=40, blank=True)),
                ('fromdomain', models.CharField(max_length=40, blank=True)),
                ('fromuser', models.CharField(max_length=40, blank=True)),
                ('realm', models.CharField(max_length=60, blank=True)),
                ('qualify', models.CharField(max_length=40, blank=True)),
                ('defaultip', models.CharField(max_length=40, blank=True)),
                ('rtptimeout', models.IntegerField(null=True, blank=True)),
                ('rtpholdtimeout', models.IntegerField(null=True, blank=True)),
                ('sendrpid', models.CharField(max_length=3, blank=True)),
                ('outboundproxy', models.CharField(max_length=40, blank=True)),
                ('callbackextension', models.CharField(max_length=40, blank=True)),
                ('registertrying', models.CharField(max_length=3, blank=True)),
                ('timert1', models.IntegerField(null=True, blank=True)),
                ('timerb', models.IntegerField(null=True, blank=True)),
                ('qualifyfreq', models.IntegerField(null=True, blank=True)),
                ('constantssrc', models.CharField(max_length=3, blank=True)),
                ('contactpermit', models.CharField(max_length=40, blank=True)),
                ('contactdeny', models.CharField(max_length=40, blank=True)),
                ('usereqphone', models.CharField(max_length=3, blank=True)),
                ('textsupport', models.CharField(max_length=3, blank=True)),
                ('faxdetect', models.CharField(max_length=3, blank=True)),
                ('buggymwi', models.CharField(max_length=3, blank=True)),
                ('auth', models.CharField(max_length=40, blank=True)),
                ('fullname', models.CharField(max_length=40, blank=True)),
                ('trunkname', models.CharField(max_length=40, blank=True)),
                ('cid_number', models.CharField(max_length=40, blank=True)),
                ('callingpres', models.CharField(max_length=21, blank=True)),
                ('mohinterpret', models.CharField(max_length=40, blank=True)),
                ('mohsuggest', models.CharField(max_length=40, blank=True)),
                ('parkinglot', models.CharField(max_length=40, blank=True)),
                ('hasvoicemail', models.CharField(max_length=3, blank=True)),
                ('subscribemwi', models.CharField(max_length=3, blank=True)),
                ('vmexten', models.CharField(max_length=40, blank=True)),
                ('autoframing', models.CharField(max_length=3, blank=True)),
                ('rtpkeepalive', models.IntegerField(null=True, blank=True)),
                ('call_limit', models.IntegerField(null=True, db_column='call-limit', blank=True)),
                ('g726nonstandard', models.CharField(max_length=3, blank=True)),
                ('ignoresdpversion', models.CharField(max_length=3, blank=True)),
                ('allowtransfer', models.CharField(max_length=3, blank=True)),
                ('dynamic', models.CharField(max_length=3, blank=True)),
                ('alias', models.CharField(max_length=5, blank=True)),
                ('alias_name', models.CharField(max_length=20, blank=True)),
                ('gravacao', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'sip_devices',
                'managed': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Voicemail',
            fields=[
                ('uniqueid', models.IntegerField(serialize=False, primary_key=True)),
                ('context', models.CharField(max_length=80)),
                ('mailbox', models.CharField(max_length=80)),
                ('password', models.CharField(max_length=80)),
                ('fullname', models.CharField(max_length=80, blank=True)),
                ('email', models.CharField(max_length=80, blank=True)),
                ('pager', models.CharField(max_length=80, blank=True)),
                ('attach', models.CharField(max_length=3, blank=True)),
                ('attachfmt', models.CharField(max_length=10, blank=True)),
                ('serveremail', models.CharField(max_length=80, blank=True)),
                ('language', models.CharField(max_length=20, blank=True)),
                ('tz', models.CharField(max_length=30, blank=True)),
                ('deletevoicemail', models.CharField(max_length=3, blank=True)),
                ('saycid', models.CharField(max_length=3, blank=True)),
                ('sendvoicemail', models.CharField(max_length=3, blank=True)),
                ('review', models.CharField(max_length=3, blank=True)),
                ('tempgreetwarn', models.CharField(max_length=3, blank=True)),
                ('operator', models.CharField(max_length=3, blank=True)),
                ('envelope', models.CharField(max_length=3, blank=True)),
                ('sayduration', models.CharField(max_length=3, blank=True)),
                ('saydurationm', models.IntegerField(null=True, blank=True)),
                ('forcename', models.CharField(max_length=3, blank=True)),
                ('forcegreetings', models.CharField(max_length=3, blank=True)),
                ('callback', models.CharField(max_length=80, blank=True)),
                ('dialout', models.CharField(max_length=80, blank=True)),
                ('exitcontext', models.CharField(max_length=80, blank=True)),
                ('maxmsg', models.IntegerField(null=True, blank=True)),
                ('volgain', models.DecimalField(null=True, max_digits=5, decimal_places=2, blank=True)),
                ('imapuser', models.CharField(max_length=80, blank=True)),
                ('imappassword', models.CharField(max_length=80, blank=True)),
                ('stamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'voicemail',
                'managed': False,
            },
            bases=(models.Model,),
        ),
    ]
